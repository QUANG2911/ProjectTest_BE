// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectTest.Data;

#nullable disable

namespace ProjectTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241225080027_ThemReport")]
    partial class ThemReport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectTest.Models.Block", b =>
                {
                    b.Property<string>("MABLOCK")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("LOAIBAY")
                        .HasColumnType("int");

                    b.HasKey("MABLOCK");

                    b.ToTable("blocks");
                });

            modelBuilder.Entity("ProjectTest.Models.CT_Container", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("MAVITRI")
                        .HasColumnType("int");

                    b.Property<DateTime>("THOIGIANBATDAU")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("THOIGIANKETTHUC")
                        .HasColumnType("datetime2");

                    b.HasKey("id", "MAVITRI");

                    b.HasIndex("MAVITRI");

                    b.ToTable("cT_Containers");
                });

            modelBuilder.Entity("ProjectTest.Models.Container", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ISOCODE")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("MACONTAINER")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MAKH")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("MALOAI")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("MAPHIEUXUAT")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("MAXWEIGHT")
                        .HasColumnType("int");

                    b.Property<DateTime>("NGAYSANXUAT")
                        .HasColumnType("datetime2");

                    b.Property<string>("NUMCONTAINER")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("TAREWEIGHT")
                        .HasColumnType("int");

                    b.Property<string>("TINHTRANG")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("MAKH");

                    b.HasIndex("MALOAI");

                    b.HasIndex("MAPHIEUXUAT");

                    b.ToTable("containers");
                });

            modelBuilder.Entity("ProjectTest.Models.KhachHang", b =>
                {
                    b.Property<string>("MAKH")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("MST")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TENKH")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MAKH");

                    b.ToTable("khachHangs");
                });

            modelBuilder.Entity("ProjectTest.Models.LoaiContainer", b =>
                {
                    b.Property<string>("MALOAI")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TENLOAI")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MALOAI");

                    b.ToTable("loaiContainers");
                });

            modelBuilder.Entity("ProjectTest.Models.PhieuNhap", b =>
                {
                    b.Property<string>("MAPHIEUNHAP")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("BIENSODONVIVANCHUYEN")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DONVIVANCHUYEN")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("NGAYDK")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NGAYGIAOCONTAINER")
                        .HasColumnType("datetime2");

                    b.Property<int>("TRANGTHAIDUYET")
                        .HasColumnType("int");

                    b.Property<int?>("id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("MAPHIEUNHAP");

                    b.HasIndex("id");

                    b.ToTable("phieuNhaps");
                });

            modelBuilder.Entity("ProjectTest.Models.PhieuXuat", b =>
                {
                    b.Property<string>("MAPHIEUXUAT")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DONVIVANCHUYEN")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("MASODONVIVANCHUYEN")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("NGAYLAMPHIEU")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NGAYXUAT")
                        .HasColumnType("datetime2");

                    b.Property<int>("TRANGTHAIDUYET")
                        .HasColumnType("int");

                    b.HasKey("MAPHIEUXUAT");

                    b.ToTable("pHIEUXUATs");
                });

            modelBuilder.Entity("ProjectTest.Models.Report", b =>
                {
                    b.Property<int>("stt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("stt"));

                    b.Property<string>("NOIDUNG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("THOIGIANQUERY")
                        .HasColumnType("datetime2");

                    b.Property<string>("USERID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("stt");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ProjectTest.Models.TaiKhoan", b =>
                {
                    b.Property<int>("STT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("STT"));

                    b.Property<string>("LOAIACCOUNT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MAKH")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("MANV")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PASS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USERNAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("STT");

                    b.HasIndex("MAKH");

                    b.ToTable("taiKhoans");
                });

            modelBuilder.Entity("ProjectTest.Models.ViTriContainer", b =>
                {
                    b.Property<int>("MAVITRI")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MAVITRI"));

                    b.Property<string>("MABLOCK")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("SOBAY")
                        .HasColumnType("int");

                    b.Property<int>("SOROW")
                        .HasColumnType("int");

                    b.Property<int>("SOTIER")
                        .HasColumnType("int");

                    b.Property<int>("TRANGTHAIRONG")
                        .HasColumnType("int");

                    b.HasKey("MAVITRI");

                    b.HasIndex("MABLOCK");

                    b.ToTable("ViTriContainers");
                });

            modelBuilder.Entity("ProjectTest.Models.CT_Container", b =>
                {
                    b.HasOne("ProjectTest.Models.ViTriContainer", "viTriContainer")
                        .WithMany("cT_Containers")
                        .HasForeignKey("MAVITRI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectTest.Models.Container", "Container")
                        .WithMany("cT_Containers")
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Container");

                    b.Navigation("viTriContainer");
                });

            modelBuilder.Entity("ProjectTest.Models.Container", b =>
                {
                    b.HasOne("ProjectTest.Models.KhachHang", "khachHang")
                        .WithMany("containers")
                        .HasForeignKey("MAKH");

                    b.HasOne("ProjectTest.Models.LoaiContainer", "LoaiContainer")
                        .WithMany("containers")
                        .HasForeignKey("MALOAI");

                    b.HasOne("ProjectTest.Models.PhieuXuat", "phieuXuat")
                        .WithMany("containers")
                        .HasForeignKey("MAPHIEUXUAT");

                    b.Navigation("LoaiContainer");

                    b.Navigation("khachHang");

                    b.Navigation("phieuXuat");
                });

            modelBuilder.Entity("ProjectTest.Models.PhieuNhap", b =>
                {
                    b.HasOne("ProjectTest.Models.Container", "Container")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Container");
                });

            modelBuilder.Entity("ProjectTest.Models.TaiKhoan", b =>
                {
                    b.HasOne("ProjectTest.Models.KhachHang", "khachHang")
                        .WithMany("taiKhoans")
                        .HasForeignKey("MAKH");

                    b.Navigation("khachHang");
                });

            modelBuilder.Entity("ProjectTest.Models.ViTriContainer", b =>
                {
                    b.HasOne("ProjectTest.Models.Block", "Block")
                        .WithMany("viTriContainers")
                        .HasForeignKey("MABLOCK");

                    b.Navigation("Block");
                });

            modelBuilder.Entity("ProjectTest.Models.Block", b =>
                {
                    b.Navigation("viTriContainers");
                });

            modelBuilder.Entity("ProjectTest.Models.Container", b =>
                {
                    b.Navigation("PhieuNhaps");

                    b.Navigation("cT_Containers");
                });

            modelBuilder.Entity("ProjectTest.Models.KhachHang", b =>
                {
                    b.Navigation("containers");

                    b.Navigation("taiKhoans");
                });

            modelBuilder.Entity("ProjectTest.Models.LoaiContainer", b =>
                {
                    b.Navigation("containers");
                });

            modelBuilder.Entity("ProjectTest.Models.PhieuXuat", b =>
                {
                    b.Navigation("containers");
                });

            modelBuilder.Entity("ProjectTest.Models.ViTriContainer", b =>
                {
                    b.Navigation("cT_Containers");
                });
#pragma warning restore 612, 618
        }
    }
}
